{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dima/WebstormProjects/24-react-drunkard/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport { cards, finishPage, gamePage } from \"../utils/Constants\";\nlet gameCard = [...cards];\n\nfunction start() {\n  gameCard = [...cards];\n  gameCard.sort(() => Math.random() - 0.5);\n}\n\nclass Game extends Component {\n  constructor(props, game) {\n    super(props, game);\n\n    this.gameProcess = () => {\n      if (gameCard.length === 0) {\n        start();\n        this.state.game.isWin = this.state.game.countLose < this.state.game.countWin;\n        this.props.gamePage(finishPage, this.state.game);\n      } else {\n        console.log(this.state.game.countLose);\n        console.log(this.state.game.countWin);\n        let hand1 = gameCard.shift();\n        this.setState({\n          hand1: hand1\n        });\n        let hand2 = gameCard.shift();\n        this.setState({\n          hand2: hand2\n        });\n        hand1 > hand2 ? ++this.state.game.countLose : ++this.state.game.countWin;\n      }\n    };\n\n    this.state = {\n      player: props.player,\n      hand1: '',\n      hand2: '',\n      game: {\n        countLose: props.game.countLose,\n        countWin: props.game.countWin,\n        isWin: props.game.isWin\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.hand1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.hand2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.gameProcess,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/dima/WebstormProjects/24-react-drunkard/src/components/Game.js"],"names":["React","Component","cards","finishPage","gamePage","gameCard","start","sort","Math","random","Game","constructor","props","game","gameProcess","length","state","isWin","countLose","countWin","console","log","hand1","shift","setState","hand2","player","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,QAA3B,QAA0C,oBAA1C;AAEA,IAAIC,QAAQ,GAAG,CAAC,GAAGH,KAAJ,CAAf;;AAEA,SAASI,KAAT,GAAiB;AACbD,EAAAA,QAAQ,GAAG,CAAC,GAAGH,KAAJ,CAAX;AACAG,EAAAA,QAAQ,CAACE,IAAT,CAAc,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAApC;AACH;;AAED,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AACzBU,EAAAA,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAc;AACrB,UAAMD,KAAN,EAAYC,IAAZ;;AADqB,SAgBzBC,WAhByB,GAgBX,MAAM;AAChB,UAAGT,QAAQ,CAACU,MAAT,KAAoB,CAAvB,EAAyB;AACrBT,QAAAA,KAAK;AACL,aAAKU,KAAL,CAAWH,IAAX,CAAgBI,KAAhB,GAAwB,KAAKD,KAAL,CAAWH,IAAX,CAAgBK,SAAhB,GAA4B,KAAKF,KAAL,CAAWH,IAAX,CAAgBM,QAApE;AACA,aAAKP,KAAL,CAAWR,QAAX,CAAoBD,UAApB,EAA+B,KAAKa,KAAL,CAAWH,IAA1C;AACH,OAJD,MAIO;AACHO,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWH,IAAX,CAAgBK,SAA5B;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWH,IAAX,CAAgBM,QAA5B;AACA,YAAIG,KAAK,GAAGjB,QAAQ,CAACkB,KAAT,EAAZ;AACA,aAAKC,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACA,YAAIG,KAAK,GAAGpB,QAAQ,CAACkB,KAAT,EAAZ;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACAH,QAAAA,KAAK,GAAGG,KAAR,GAAgB,EAAE,KAAKT,KAAL,CAAWH,IAAX,CAAgBK,SAAlC,GAA8C,EAAE,KAAKF,KAAL,CAAWH,IAAX,CAAgBM,QAAhE;AAEH;AACJ,KA/BwB;;AAErB,SAAKH,KAAL,GAAa;AACTU,MAAAA,MAAM,EAAEd,KAAK,CAACc,MADL;AAETJ,MAAAA,KAAK,EAAE,EAFE;AAGTG,MAAAA,KAAK,EAAE,EAHE;AAITZ,MAAAA,IAAI,EAAG;AACHK,QAAAA,SAAS,EAAGN,KAAK,CAACC,IAAN,CAAWK,SADpB;AAEHC,QAAAA,QAAQ,EAAEP,KAAK,CAACC,IAAN,CAAWM,QAFlB;AAGHF,QAAAA,KAAK,EAAEL,KAAK,CAACC,IAAN,CAAWI;AAHf;AAJE,KAAb;AAYH;;AAoBDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAA,oBAAK,KAAKX,KAAL,CAAWM;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAK,KAAKN,KAAL,CAAWS;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAQ,QAAA,OAAO,EAAE,KAAKX,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,kBAAK,KAAKE,KAAL,CAAWU;AAAhB;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAhDwB;;AAmD7B,eAAehB,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport {cards, finishPage, gamePage} from \"../utils/Constants\";\n\nlet gameCard = [...cards];\n\nfunction start (){\n    gameCard = [...cards]\n    gameCard.sort(() => Math.random() - 0.5);\n}\n\nclass Game extends Component {\n    constructor(props, game) {\n        super(props,game);\n        this.state = {\n            player: props.player,\n            hand1: '',\n            hand2: '',\n            game : {\n                countLose : props.game.countLose,\n                countWin: props.game.countWin,\n                isWin: props.game.isWin\n            }\n\n\n        }\n    }\n\n    gameProcess = () => {\n        if(gameCard.length === 0){\n            start();\n            this.state.game.isWin = this.state.game.countLose < this.state.game.countWin;\n            this.props.gamePage(finishPage,this.state.game);\n        } else {\n            console.log(this.state.game.countLose)\n            console.log(this.state.game.countWin)\n            let hand1 = gameCard.shift();\n            this.setState({hand1: hand1});\n            let hand2 = gameCard.shift()\n            this.setState({hand2: hand2});\n            hand1 > hand2 ? ++this.state.game.countLose : ++this.state.game.countWin;\n\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2>computer</h2>\n                <section>\n                    <h3>{this.state.hand1}</h3>\n                    <h3>{this.state.hand2}</h3>\n                </section>\n                <button onClick={this.gameProcess}>next</button>\n                <h2>{this.state.player}</h2>\n            </div>\n\n        );\n    };\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}